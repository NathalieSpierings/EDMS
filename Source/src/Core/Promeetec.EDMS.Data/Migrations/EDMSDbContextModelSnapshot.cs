// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Promeetec.EDMS.Data.Context;

#nullable disable

namespace Promeetec.EDMS.Data.Migrations
{
    [DbContext(typeof(EDMSDbContext))]
    partial class EDMSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Admin.DownloadActivity.DownloadActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<Guid?>("AanleveringId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BestandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BestandSoort")
                        .HasColumnType("int");

                    b.Property<DateTime>("GedownloadOp")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MedewerkerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VoorraadId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BestandId");

                    b.HasIndex("MedewerkerId");

                    b.ToTable("DownloadActivity", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Admin.EiStandaard.EiStandaard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("EiBerichtCodes")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SubVersie")
                        .HasColumnType("int");

                    b.Property<int?>("Versie")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EiStandaard", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Admin.Mededeling.Mededeling", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id");

                    b.ToTable("Mededeling", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Admin.RedenEindeZorg.RedenEindeZorg", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RedenEindeZorg", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Admin.Zorgstraat.Zorgstraat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Naam");

                    b.ToTable("Zorgstraat", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Adres.Adres", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("Huisnummer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Huisnummertoevoeging")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("LandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LandNaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Straat")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("WoonachtigOp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WoonachtigTot")
                        .HasColumnType("datetime2");

                    b.Property<string>("Woonplaats")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("LandId");

                    b.ToTable("Adres", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Land.Land", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("CultureCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NativeName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NativeName")
                        .IsUnique();

                    b.ToTable("Land", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("AangemaaktDoor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AangemaaktDoorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("AccountState")
                        .HasColumnType("int");

                    b.Property<bool>("ActivationMailSend")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ActivationMailSendById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ActivationMailSendOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("AdresId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AgbCodeOnderneming")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AgbCodeZorgverlener")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte[]>("Avatar")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeactivatieReden")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Medewerker_Email");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Functie")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("GoogleAuthenticatorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("GoogleAuthenticatorSecretKey")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IONToestemmingsverklaringActivatieLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LaatstIngelogdOp")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MedewerkerSoort")
                        .HasColumnType("int");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("OrganisatieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PukCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TempCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("VorigeLoginOp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActivationMailSendById");

                    b.HasIndex("AdresId");

                    b.HasIndex("AgbCodeOnderneming");

                    b.HasIndex("AgbCodeZorgverlener");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("OrganisatieId");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.HasIndex("UserProfileId");

                    b.ToTable("Medewerkers", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Memo.Memo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MedewerkerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MedewerkerId");

                    b.ToTable("Memo", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Notification.Notificatie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("Bericht")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GelezenOp")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MedewerkerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NotificatieStatus")
                        .HasColumnType("int");

                    b.Property<int>("NotificatieType")
                        .HasColumnType("int");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MedewerkerId");

                    b.ToTable("Notificatie", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Organisatie.Organisatie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<Guid?>("AdresId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdresboekId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AgbCodeOnderneming")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Beperkt")
                        .HasColumnType("bit");

                    b.Property<string>("BeperktReden")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("ContactpersoonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("Logo")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nummer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TelefoonPrive")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TelefoonZakelijk")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VoorraadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Website")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Zorggroep")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ZorggroepRelatieId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AdresId");

                    b.HasIndex("AdresboekId")
                        .IsUnique();

                    b.HasIndex("ContactpersoonId");

                    b.HasIndex("Naam");

                    b.HasIndex("Nummer")
                        .IsUnique();

                    b.HasIndex("VoorraadId")
                        .IsUnique();

                    b.HasIndex("ZorggroepRelatieId");

                    b.ToTable("Organisaties", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.UserProfile.UserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("AanleverstatusIds")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CarbonCopyAdressen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmailBijAanleverbericht")
                        .HasColumnType("int");

                    b.Property<bool>("EmailBijRapportage")
                        .HasColumnType("bit");

                    b.Property<int>("EmailBijToevoegenDocument")
                        .HasColumnType("int");

                    b.Property<bool>("IONToestemmingIngetrokken")
                        .HasColumnType("bit");

                    b.Property<bool>("IONToestemmingsverlaringGetekend")
                        .HasColumnType("bit");

                    b.Property<bool>("IONVecozoToestemming")
                        .HasColumnType("bit");

                    b.Property<int>("PageSize")
                        .HasColumnType("int");

                    b.Property<int>("SidebarLayout")
                        .HasColumnType("int");

                    b.Property<int>("TableLayout")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserProfile", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Verzekeraar.Verzekeraar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<bool>("Actief")
                        .HasColumnType("bit");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<short>("Uzovi")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("Naam");

                    b.HasIndex("Uzovi");

                    b.ToTable("Verzekeraar", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Verzekerde.Verzekerde", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("AangemaaktDoor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AangemaaktDoorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdresId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdresboekId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AgbCodeVerwijzer")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Bsn")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<double?>("Lengte")
                        .HasColumnType("float");

                    b.Property<string>("NaamVerwijzer")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("Shared")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Verwijsdatum")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ZorgprofielId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ZorgverzekeringId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AdresId");

                    b.HasIndex("AdresboekId");

                    b.HasIndex("AgbCodeVerwijzer");

                    b.HasIndex("Bsn");

                    b.HasIndex("ZorgprofielId");

                    b.HasIndex("ZorgverzekeringId");

                    b.ToTable("Verzekerden", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Verzekerde.VerzekerdeToAdres", b =>
                {
                    b.Property<Guid>("VerzekerdeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdresId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("VerzekerdeId", "AdresId");

                    b.HasIndex("AdresId");

                    b.ToTable("VerzekerdeToAdres", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Verzekerde.VerzekerdeToUser", b =>
                {
                    b.Property<Guid>("VerzekerdeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("VerzekerdeId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("VerzekerdeToUser", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Verzekerde.VerzekerdeToZorgprofiel", b =>
                {
                    b.Property<Guid>("VerzekerdeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ZorgprofielId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("VerzekerdeId", "ZorgprofielId");

                    b.HasIndex("ZorgprofielId");

                    b.ToTable("VerzekerdeToZorgprofiel", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Verzekerde.VerzekerdeToZorgverzekering", b =>
                {
                    b.Property<Guid>("VerzekerdeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ZorgverzekeringId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("VerzekerdeId", "ZorgverzekeringId");

                    b.HasIndex("ZorgverzekeringId");

                    b.ToTable("VerzekerdeToZorgverzekering", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Weegmoment.Weegmoment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<double>("Gewicht")
                        .HasColumnType("float");

                    b.Property<DateTime>("Opnamedatum")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("VerzekerdeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VerzekerdeId");

                    b.ToTable("Weegmoment", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Zorgverzekering.Zorgverzekering", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("PatientNummer")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<Guid>("VerzekeraarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("VerzekerdOp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VerzekerdTot")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerzekerdeNummer")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("PatientNummer");

                    b.HasIndex("VerzekeraarId");

                    b.HasIndex("VerzekerdeNummer");

                    b.ToTable("Zorgverzekering", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Document.Aanleverbestand.Samenvatting.AanleverbestandSamenvatting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AantalPrestatieRecords")
                        .HasColumnType("int");

                    b.Property<int?>("AantalVerzekerdeRecords")
                        .HasColumnType("int");

                    b.Property<Guid?>("BestandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EiStandaard")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Instellingscode")
                        .HasColumnType("int");

                    b.Property<int>("OvergeslagenRows")
                        .HasColumnType("int");

                    b.Property<int?>("Praktijkcode")
                        .HasColumnType("int");

                    b.Property<bool>("Processed")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TotaalDeclaratiebedrag")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("ZorgverlenersCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BestandId")
                        .IsUnique()
                        .HasFilter("[BestandId] IS NOT NULL");

                    b.ToTable("AanleverbestandSamenvatting", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Document.Bestand.Bestand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<Guid?>("AangemaaktDoor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AangemaaktDoorNaam")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("AangemaaktOp")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("AangepastDoor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AangepastOp")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("EigenaarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("FileSize")
                        .HasColumnType("int");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("EigenaarId");

                    b.ToTable("Bestand", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Event.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrganisatieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TargetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TargetType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Events", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Identity.Group.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Groups", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Identity.Group.GroupRole", b =>
                {
                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GroupId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("GroupRole", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Identity.Group.GroupUser", b =>
                {
                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GroupId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("GroupUser", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Identity.Role.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Identity.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Identity.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Identity.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Identity.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MedewerkerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("MedewerkerId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Identity.UserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Menu.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Menu", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Menu.MenuItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Controller")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GlyphIcon")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModuleNaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Tooltip")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Volgorde")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("ParentId");

                    b.ToTable("MenuItem", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Menu.MenuItemRole", b =>
                {
                    b.Property<Guid>("MenuItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MenuItemId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("MenuItemRole", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Modules.Adresboek.Adresboek", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.HasKey("Id");

                    b.ToTable("Adresboek", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Modules.Declaratie.Aanleverbericht.Aanleverbericht", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<int>("AanleverberichtStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("AanleveringId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AfzenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bericht")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gelezen")
                        .HasColumnType("bit");

                    b.Property<DateTime>("GeplaatstOp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LaastGelezenOp")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LaasteLezerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Onderwerp")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("OntvangerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Volgorde")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AanleveringId");

                    b.HasIndex("AfzenderId");

                    b.HasIndex("LaasteLezerId");

                    b.HasIndex("Onderwerp");

                    b.HasIndex("OntvangerId");

                    b.HasIndex("ParentId");

                    b.ToTable("Aanleverbericht", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Modules.Declaratie.Aanlevering.Aanlevering", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<Guid?>("AangemaaktDoor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AangepastDoor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AangepastOp")
                        .HasColumnType("datetime2");

                    b.Property<int>("AanleverStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("Aanleverdatum")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("BehandelaarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EigenaarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Jaar")
                        .HasColumnType("int");

                    b.Property<string>("Opmerking")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrganisatieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Referentie")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReferentiePromeetec")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ToevoegenBestand")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BehandelaarId");

                    b.HasIndex("EigenaarId");

                    b.HasIndex("OrganisatieId");

                    b.HasIndex("Referentie");

                    b.HasIndex("ReferentiePromeetec");

                    b.ToTable("Aanlevering", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Modules.Declaratie.Voorraad.Voorraad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.HasKey("Id");

                    b.ToTable("Voorraad", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Modules.GLI.Behandelplan.GliBehandelplan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<Guid>("BehandelaarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Einddatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("Fase")
                        .HasColumnType("int");

                    b.Property<int>("GliProgramma")
                        .HasColumnType("int");

                    b.Property<int>("GliStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("IntakeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Opmerking")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrganisatieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RedenEindeZorgId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Startdatum")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Verwerkt")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("VerwerktOp")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VerzekerdeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("VoortijdigGestopt")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("VoortijdigeStopdatum")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BehandelaarId");

                    b.HasIndex("IntakeId");

                    b.HasIndex("OrganisatieId");

                    b.HasIndex("RedenEindeZorgId");

                    b.HasIndex("VerzekerdeId");

                    b.ToTable("GliBehandelplan", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Modules.GLI.Intake.GliIntake", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<Guid>("BehandelaarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GliStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("IntakeDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Opmerking")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrganisatieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Verwerkt")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("VerwerktOp")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VerzekerdeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BehandelaarId");

                    b.HasIndex("IntakeDatum");

                    b.HasIndex("OrganisatieId");

                    b.HasIndex("Verwerkt");

                    b.HasIndex("VerzekerdeId");

                    b.ToTable("GliIntake", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Modules.ION.IONPatientRelatie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<DateTime>("AangeleverdOp")
                        .HasColumnType("datetime2");

                    b.Property<int>("AantalRelaties")
                        .HasColumnType("int");

                    b.Property<string>("Achternaam")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("AgbCodeOnderneming")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AgbCodeZorgverlener")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Bsn")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Geboortedatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("IONZoekOptie")
                        .HasColumnType("int");

                    b.Property<int>("Kwaliteitscategorie")
                        .HasColumnType("int");

                    b.Property<Guid>("MedewerkerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrganisatieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Periode")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RaadplegerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RaadplegerNaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tussenvoegsel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Verwerkt")
                        .HasColumnType("bit");

                    b.Property<string>("Voorletters")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("ZorggroepRelatieId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Achternaam");

                    b.HasIndex("AgbCodeOnderneming");

                    b.HasIndex("AgbCodeZorgverlener");

                    b.HasIndex("Bsn");

                    b.HasIndex("MedewerkerId");

                    b.HasIndex("OrganisatieId");

                    b.HasIndex("ZorggroepRelatieId");

                    b.ToTable("IONPatientRelatie", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Modules.Verbruiksmiddelen.Verbruiksmiddel.VerbruiksmiddelPrestatie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("AangemaaktDoor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AangemaaktDoorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AgbCodeOnderneming")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int?>("Hoeveelheid")
                        .HasColumnType("int");

                    b.Property<int>("HulpmiddelenSoort")
                        .HasColumnType("int");

                    b.Property<Guid>("OrganisatieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PrestatieDatum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProfielCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ProfielEinddatum")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProfielStartdatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VerzekerdeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ZIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganisatieId");

                    b.HasIndex("VerzekerdeId");

                    b.ToTable("VerbruiksmiddelPrestaties", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Modules.Verbruiksmiddelen.Zorgprofiel.Zorgprofiel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<int>("ProfielCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ProfielEinddatum")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ProfielStartdatum")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProfielCode");

                    b.ToTable("Zorgprofiel", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Document.Aanleverbestand.Aanleverberstand.Aanleverbestand", b =>
                {
                    b.HasBaseType("Promeetec.EDMS.Domain.Models.Document.Bestand.Bestand");

                    b.Property<Guid?>("AanleveringId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EiStandaardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Gecontroleerd")
                        .HasColumnType("bit");

                    b.Property<string>("Periode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("VoorraadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("WorkFlowState")
                        .HasColumnType("int");

                    b.Property<Guid?>("ZorgstraatId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("AanleveringId");

                    b.HasIndex("EiStandaardId");

                    b.HasIndex("VoorraadId");

                    b.HasIndex("ZorgstraatId");

                    b.ToTable("Aanleverbestand", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Document.Overigbestand.Overigbestand", b =>
                {
                    b.HasBaseType("Promeetec.EDMS.Domain.Models.Document.Bestand.Bestand");

                    b.Property<Guid>("AanleveringId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("AanleveringId");

                    b.ToTable("Overigbestand", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Document.Rapportage.Rapportage", b =>
                {
                    b.HasBaseType("Promeetec.EDMS.Domain.Models.Document.Bestand.Bestand");

                    b.Property<Guid>("OrganisatieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RapportageSoort")
                        .HasColumnType("int");

                    b.Property<string>("Referentie")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasIndex("OrganisatieId");

                    b.ToTable("Rapportages", (string)null);
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Admin.DownloadActivity.DownloadActivity", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Document.Bestand.Bestand", "Bestand")
                        .WithMany()
                        .HasForeignKey("BestandId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", "Medewerker")
                        .WithMany()
                        .HasForeignKey("MedewerkerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Bestand");

                    b.Navigation("Medewerker");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Adres.Adres", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Land.Land", "Land")
                        .WithMany()
                        .HasForeignKey("LandId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Land");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", "ActivationMailSendBy")
                        .WithMany()
                        .HasForeignKey("ActivationMailSendById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Adres.Adres", "Adres")
                        .WithMany()
                        .HasForeignKey("AdresId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Organisatie.Organisatie", "Organisatie")
                        .WithMany("Medewerkers")
                        .HasForeignKey("OrganisatieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.UserProfile.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Promeetec.EDMS.Domain.Models.Betrokkene.Persoon.Persoon", "Persoon", b1 =>
                        {
                            b1.Property<Guid>("MedewerkerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Achternaam")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)")
                                .HasColumnName("Achternaam");

                            b1.Property<string>("Doorkiesnummer")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Doorkiesnummer");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(450)
                                .HasColumnType("nvarchar(450)")
                                .HasColumnName("Email");

                            b1.Property<string>("FormeleNaam")
                                .IsRequired()
                                .HasMaxLength(450)
                                .HasColumnType("nvarchar(450)")
                                .HasColumnName("FormeleNaam");

                            b1.Property<DateTime?>("Geboortedatum")
                                .HasColumnType("datetime2")
                                .HasColumnName("Geboortedatum");

                            b1.Property<int>("Geslacht")
                                .HasColumnType("int")
                                .HasColumnName("Geslacht");

                            b1.Property<string>("TelefoonPrive")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("TelefoonPrive");

                            b1.Property<string>("TelefoonZakelijk")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("TelefoonZakelijk");

                            b1.Property<string>("Tussenvoegsel")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("Tussenvoegsel");

                            b1.Property<string>("VolledigeNaam")
                                .IsRequired()
                                .HasMaxLength(450)
                                .HasColumnType("nvarchar(450)")
                                .HasColumnName("VolledigeNaam");

                            b1.Property<string>("Voorletters")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("Voorletters");

                            b1.Property<string>("Voornaam")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("Voornaam");

                            b1.HasKey("MedewerkerId");

                            b1.HasIndex("VolledigeNaam", "FormeleNaam", "Achternaam", "Email");

                            b1.ToTable("Medewerkers");

                            b1.WithOwner()
                                .HasForeignKey("MedewerkerId");
                        });

                    b.Navigation("ActivationMailSendBy");

                    b.Navigation("Adres");

                    b.Navigation("Organisatie");

                    b.Navigation("Persoon")
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Memo.Memo", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", "Medewerker")
                        .WithMany("Memos")
                        .HasForeignKey("MedewerkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medewerker");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Notification.Notificatie", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", "Medewerker")
                        .WithMany()
                        .HasForeignKey("MedewerkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medewerker");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Organisatie.Organisatie", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Adres.Adres", "Adres")
                        .WithMany()
                        .HasForeignKey("AdresId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Promeetec.EDMS.Domain.Models.Modules.Adresboek.Adresboek", "Adresboek")
                        .WithOne("Organisatie")
                        .HasForeignKey("Promeetec.EDMS.Domain.Models.Betrokkene.Organisatie.Organisatie", "AdresboekId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", "Contactpersoon")
                        .WithMany()
                        .HasForeignKey("ContactpersoonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Promeetec.EDMS.Domain.Models.Modules.Declaratie.Voorraad.Voorraad", "Voorraad")
                        .WithOne("Organisatie")
                        .HasForeignKey("Promeetec.EDMS.Domain.Models.Betrokkene.Organisatie.Organisatie", "VoorraadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Organisatie.Organisatie", "ZorggroepRelatie")
                        .WithMany()
                        .HasForeignKey("ZorggroepRelatieId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.OwnsOne("Promeetec.EDMS.Domain.Models.Betrokkene.Organisatie.OrganisatieSettings", "Settings", b1 =>
                        {
                            b1.Property<Guid>("OrganisatieId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("AanleverStatusNaSchrijvenAanleverbestanden")
                                .HasColumnType("int")
                                .HasColumnName("AanleverStatusNaSchrijvenAanleverbestanden");

                            b1.Property<string>("AanleverbestandLocatie")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("AanleverbestandLocatie");

                            b1.Property<int>("COVControleProcessType")
                                .HasColumnType("int")
                                .HasColumnName("COVControleProcessType");

                            b1.Property<int>("COVControleType")
                                .HasColumnType("int")
                                .HasColumnName("COVControleType");

                            b1.Property<int>("IONZoekoptie")
                                .HasColumnType("int")
                                .HasColumnName("IONZoekoptie");

                            b1.Property<int>("VerwijzerInAdresboek")
                                .HasColumnType("int")
                                .HasColumnName("VerwijzerInAdresboek");

                            b1.HasKey("OrganisatieId");

                            b1.ToTable("Organisaties");

                            b1.WithOwner()
                                .HasForeignKey("OrganisatieId");
                        });

                    b.Navigation("Adres");

                    b.Navigation("Adresboek");

                    b.Navigation("Contactpersoon");

                    b.Navigation("Settings")
                        .IsRequired();

                    b.Navigation("Voorraad");

                    b.Navigation("ZorggroepRelatie");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Verzekerde.Verzekerde", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Adres.Adres", "Adres")
                        .WithMany()
                        .HasForeignKey("AdresId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Promeetec.EDMS.Domain.Models.Modules.Adresboek.Adresboek", "Adresboek")
                        .WithMany("Verzekerden")
                        .HasForeignKey("AdresboekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Modules.Verbruiksmiddelen.Zorgprofiel.Zorgprofiel", "Zorgprofiel")
                        .WithMany()
                        .HasForeignKey("ZorgprofielId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Zorgverzekering.Zorgverzekering", "Zorgverzekering")
                        .WithMany()
                        .HasForeignKey("ZorgverzekeringId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("Promeetec.EDMS.Domain.Models.Betrokkene.Persoon.Persoon", "Persoon", b1 =>
                        {
                            b1.Property<Guid>("VerzekerdeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Achternaam")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("Doorkiesnummer")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(450)
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("FormeleNaam")
                                .IsRequired()
                                .HasMaxLength(450)
                                .HasColumnType("nvarchar(450)");

                            b1.Property<DateTime?>("Geboortedatum")
                                .HasColumnType("datetime2");

                            b1.Property<int>("Geslacht")
                                .HasColumnType("int");

                            b1.Property<string>("TelefoonPrive")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("TelefoonZakelijk")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("Tussenvoegsel")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.Property<string>("VolledigeNaam")
                                .IsRequired()
                                .HasMaxLength(450)
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Voorletters")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.Property<string>("Voornaam")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.HasKey("VerzekerdeId");

                            b1.HasIndex("VolledigeNaam", "FormeleNaam", "Achternaam", "Email");

                            b1.ToTable("Verzekerden");

                            b1.WithOwner()
                                .HasForeignKey("VerzekerdeId");
                        });

                    b.Navigation("Adres");

                    b.Navigation("Adresboek");

                    b.Navigation("Persoon")
                        .IsRequired();

                    b.Navigation("Zorgprofiel");

                    b.Navigation("Zorgverzekering");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Verzekerde.VerzekerdeToAdres", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Adres.Adres", "Adres")
                        .WithMany("Verzekerden")
                        .HasForeignKey("AdresId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Verzekerde.Verzekerde", "Verzekerde")
                        .WithMany("Adressen")
                        .HasForeignKey("VerzekerdeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Adres");

                    b.Navigation("Verzekerde");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Verzekerde.VerzekerdeToUser", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", "User")
                        .WithMany("Verzekerden")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Verzekerde.Verzekerde", "Verzekerde")
                        .WithMany("Users")
                        .HasForeignKey("VerzekerdeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Verzekerde");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Verzekerde.VerzekerdeToZorgprofiel", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Verzekerde.Verzekerde", "Verzekerde")
                        .WithMany("Zorgprofielen")
                        .HasForeignKey("VerzekerdeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Modules.Verbruiksmiddelen.Zorgprofiel.Zorgprofiel", "Zorgprofiel")
                        .WithMany("Verzekerden")
                        .HasForeignKey("ZorgprofielId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Verzekerde");

                    b.Navigation("Zorgprofiel");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Verzekerde.VerzekerdeToZorgverzekering", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Verzekerde.Verzekerde", "Verzekerde")
                        .WithMany("Zorgverzekeringen")
                        .HasForeignKey("VerzekerdeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Zorgverzekering.Zorgverzekering", "Zorgverzekering")
                        .WithMany("Verzekerden")
                        .HasForeignKey("ZorgverzekeringId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Verzekerde");

                    b.Navigation("Zorgverzekering");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Weegmoment.Weegmoment", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Verzekerde.Verzekerde", "Verzekerde")
                        .WithMany("WeegMomenten")
                        .HasForeignKey("VerzekerdeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Verzekerde");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Zorgverzekering.Zorgverzekering", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Verzekeraar.Verzekeraar", "Verzekeraar")
                        .WithMany()
                        .HasForeignKey("VerzekeraarId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Verzekeraar");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Document.Aanleverbestand.Samenvatting.AanleverbestandSamenvatting", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Document.Bestand.Bestand", "Bestand")
                        .WithOne("Samenvatting")
                        .HasForeignKey("Promeetec.EDMS.Domain.Models.Document.Aanleverbestand.Samenvatting.AanleverbestandSamenvatting", "BestandId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Bestand");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Document.Bestand.Bestand", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", "Eigenaar")
                        .WithMany()
                        .HasForeignKey("EigenaarId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Eigenaar");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Event.Event", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", "User")
                        .WithMany("Events")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Identity.Group.GroupRole", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Identity.Group.Group", "Group")
                        .WithMany("Roles")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Identity.Role.Role", "Role")
                        .WithMany("Groups")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Identity.Group.GroupUser", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Identity.Group.Group", "Group")
                        .WithMany("Users")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", "User")
                        .WithMany("Groups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Identity.RoleClaim", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Identity.Role.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Identity.UserClaim", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Identity.UserLogin", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", "User")
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Identity.UserRole", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", null)
                        .WithMany("Roles")
                        .HasForeignKey("MedewerkerId");

                    b.HasOne("Promeetec.EDMS.Domain.Models.Identity.Role.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Identity.UserToken", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", "User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Menu.MenuItem", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Menu.Menu", "Menu")
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Menu.MenuItem", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Menu");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Menu.MenuItemRole", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Menu.MenuItem", "MenuItem")
                        .WithMany("Roles")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Identity.Role.Role", "Role")
                        .WithMany("MenuItems")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Modules.Declaratie.Aanleverbericht.Aanleverbericht", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Modules.Declaratie.Aanlevering.Aanlevering", "Aanlevering")
                        .WithMany("Aanleverberichten")
                        .HasForeignKey("AanleveringId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", "Afzender")
                        .WithMany()
                        .HasForeignKey("AfzenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", "LaasteLezer")
                        .WithMany()
                        .HasForeignKey("LaasteLezerId");

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", "Ontvanger")
                        .WithMany()
                        .HasForeignKey("OntvangerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Modules.Declaratie.Aanleverbericht.Aanleverbericht", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Aanlevering");

                    b.Navigation("Afzender");

                    b.Navigation("LaasteLezer");

                    b.Navigation("Ontvanger");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Modules.Declaratie.Aanlevering.Aanlevering", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", "Behandelaar")
                        .WithMany()
                        .HasForeignKey("BehandelaarId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", "Eigenaar")
                        .WithMany()
                        .HasForeignKey("EigenaarId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Organisatie.Organisatie", "Organisatie")
                        .WithMany("Aanleveringen")
                        .HasForeignKey("OrganisatieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Behandelaar");

                    b.Navigation("Eigenaar");

                    b.Navigation("Organisatie");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Modules.GLI.Behandelplan.GliBehandelplan", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", "Behandelaar")
                        .WithMany()
                        .HasForeignKey("BehandelaarId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Modules.GLI.Intake.GliIntake", "Intake")
                        .WithMany("Behandelplannen")
                        .HasForeignKey("IntakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Organisatie.Organisatie", "Organisatie")
                        .WithMany()
                        .HasForeignKey("OrganisatieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Admin.RedenEindeZorg.RedenEindeZorg", "RedenEindeZorg")
                        .WithMany()
                        .HasForeignKey("RedenEindeZorgId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Verzekerde.Verzekerde", "Verzekerde")
                        .WithMany("GliBehandelplannen")
                        .HasForeignKey("VerzekerdeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Behandelaar");

                    b.Navigation("Intake");

                    b.Navigation("Organisatie");

                    b.Navigation("RedenEindeZorg");

                    b.Navigation("Verzekerde");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Modules.GLI.Intake.GliIntake", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", "Behandelaar")
                        .WithMany()
                        .HasForeignKey("BehandelaarId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Organisatie.Organisatie", "Organisatie")
                        .WithMany("GliIntakes")
                        .HasForeignKey("OrganisatieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Verzekerde.Verzekerde", "Verzekerde")
                        .WithMany("GliIntakes")
                        .HasForeignKey("VerzekerdeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Behandelaar");

                    b.Navigation("Organisatie");

                    b.Navigation("Verzekerde");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Modules.ION.IONPatientRelatie", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", "Medewerker")
                        .WithMany()
                        .HasForeignKey("MedewerkerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Organisatie.Organisatie", "Organisatie")
                        .WithMany("IONPatientRelaties")
                        .HasForeignKey("OrganisatieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Organisatie.Organisatie", "ZorggroepRelatie")
                        .WithMany()
                        .HasForeignKey("ZorggroepRelatieId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Medewerker");

                    b.Navigation("Organisatie");

                    b.Navigation("ZorggroepRelatie");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Modules.Verbruiksmiddelen.Verbruiksmiddel.VerbruiksmiddelPrestatie", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Organisatie.Organisatie", "Organisatie")
                        .WithMany("VerbruiksmiddelPrestaties")
                        .HasForeignKey("OrganisatieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Verzekerde.Verzekerde", "Verzekerde")
                        .WithMany("VerbruiksmiddelPrestaties")
                        .HasForeignKey("VerzekerdeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Organisatie");

                    b.Navigation("Verzekerde");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Document.Aanleverbestand.Aanleverberstand.Aanleverbestand", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Modules.Declaratie.Aanlevering.Aanlevering", "Aanlevering")
                        .WithMany("Aanleverbestanden")
                        .HasForeignKey("AanleveringId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Admin.EiStandaard.EiStandaard", "EiStandaard")
                        .WithMany()
                        .HasForeignKey("EiStandaardId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Promeetec.EDMS.Domain.Models.Document.Bestand.Bestand", null)
                        .WithOne()
                        .HasForeignKey("Promeetec.EDMS.Domain.Models.Document.Aanleverbestand.Aanleverberstand.Aanleverbestand", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Modules.Declaratie.Voorraad.Voorraad", "Voorraad")
                        .WithMany("Voorraadbestanden")
                        .HasForeignKey("VoorraadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Promeetec.EDMS.Domain.Models.Admin.Zorgstraat.Zorgstraat", "Zorgstraat")
                        .WithMany()
                        .HasForeignKey("ZorgstraatId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Aanlevering");

                    b.Navigation("EiStandaard");

                    b.Navigation("Voorraad");

                    b.Navigation("Zorgstraat");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Document.Overigbestand.Overigbestand", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Modules.Declaratie.Aanlevering.Aanlevering", "Aanlevering")
                        .WithMany("Overigebestanden")
                        .HasForeignKey("AanleveringId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Document.Bestand.Bestand", null)
                        .WithOne()
                        .HasForeignKey("Promeetec.EDMS.Domain.Models.Document.Overigbestand.Overigbestand", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Aanlevering");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Document.Rapportage.Rapportage", b =>
                {
                    b.HasOne("Promeetec.EDMS.Domain.Models.Document.Bestand.Bestand", null)
                        .WithOne()
                        .HasForeignKey("Promeetec.EDMS.Domain.Models.Document.Rapportage.Rapportage", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Promeetec.EDMS.Domain.Models.Betrokkene.Organisatie.Organisatie", "Organisatie")
                        .WithMany("Rapportages")
                        .HasForeignKey("OrganisatieId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Organisatie");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Adres.Adres", b =>
                {
                    b.Navigation("Verzekerden");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Medewerker.Medewerker", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Events");

                    b.Navigation("Groups");

                    b.Navigation("Logins");

                    b.Navigation("Memos");

                    b.Navigation("Roles");

                    b.Navigation("Tokens");

                    b.Navigation("UserRoles");

                    b.Navigation("Verzekerden");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Organisatie.Organisatie", b =>
                {
                    b.Navigation("Aanleveringen");

                    b.Navigation("GliIntakes");

                    b.Navigation("IONPatientRelaties");

                    b.Navigation("Medewerkers");

                    b.Navigation("Rapportages");

                    b.Navigation("VerbruiksmiddelPrestaties");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Verzekerde.Verzekerde", b =>
                {
                    b.Navigation("Adressen");

                    b.Navigation("GliBehandelplannen");

                    b.Navigation("GliIntakes");

                    b.Navigation("Users");

                    b.Navigation("VerbruiksmiddelPrestaties");

                    b.Navigation("WeegMomenten");

                    b.Navigation("Zorgprofielen");

                    b.Navigation("Zorgverzekeringen");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Betrokkene.Zorgverzekering.Zorgverzekering", b =>
                {
                    b.Navigation("Verzekerden");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Document.Bestand.Bestand", b =>
                {
                    b.Navigation("Samenvatting")
                        .IsRequired();
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Identity.Group.Group", b =>
                {
                    b.Navigation("Roles");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Identity.Role.Role", b =>
                {
                    b.Navigation("Groups");

                    b.Navigation("MenuItems");

                    b.Navigation("RoleClaims");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Menu.Menu", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Menu.MenuItem", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Modules.Adresboek.Adresboek", b =>
                {
                    b.Navigation("Organisatie")
                        .IsRequired();

                    b.Navigation("Verzekerden");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Modules.Declaratie.Aanlevering.Aanlevering", b =>
                {
                    b.Navigation("Aanleverberichten");

                    b.Navigation("Aanleverbestanden");

                    b.Navigation("Overigebestanden");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Modules.Declaratie.Voorraad.Voorraad", b =>
                {
                    b.Navigation("Organisatie")
                        .IsRequired();

                    b.Navigation("Voorraadbestanden");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Modules.GLI.Intake.GliIntake", b =>
                {
                    b.Navigation("Behandelplannen");
                });

            modelBuilder.Entity("Promeetec.EDMS.Domain.Models.Modules.Verbruiksmiddelen.Zorgprofiel.Zorgprofiel", b =>
                {
                    b.Navigation("Verzekerden");
                });
#pragma warning restore 612, 618
        }
    }
}
